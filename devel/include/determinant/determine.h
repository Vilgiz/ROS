// Generated by gencpp from file determinant/determine.msg
// DO NOT EDIT!


#ifndef DETERMINANT_MESSAGE_DETERMINE_H
#define DETERMINANT_MESSAGE_DETERMINE_H

#include <ros/service_traits.h>


#include <determinant/determineRequest.h>
#include <determinant/determineResponse.h>


namespace determinant
{

struct determine
{

typedef determineRequest Request;
typedef determineResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct determine
} // namespace determinant


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::determinant::determine > {
  static const char* value()
  {
    return "8215c5f6372e870f3eb97a7534c26a0b";
  }

  static const char* value(const ::determinant::determine&) { return value(); }
};

template<>
struct DataType< ::determinant::determine > {
  static const char* value()
  {
    return "determinant/determine";
  }

  static const char* value(const ::determinant::determine&) { return value(); }
};


// service_traits::MD5Sum< ::determinant::determineRequest> should match
// service_traits::MD5Sum< ::determinant::determine >
template<>
struct MD5Sum< ::determinant::determineRequest>
{
  static const char* value()
  {
    return MD5Sum< ::determinant::determine >::value();
  }
  static const char* value(const ::determinant::determineRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::determinant::determineRequest> should match
// service_traits::DataType< ::determinant::determine >
template<>
struct DataType< ::determinant::determineRequest>
{
  static const char* value()
  {
    return DataType< ::determinant::determine >::value();
  }
  static const char* value(const ::determinant::determineRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::determinant::determineResponse> should match
// service_traits::MD5Sum< ::determinant::determine >
template<>
struct MD5Sum< ::determinant::determineResponse>
{
  static const char* value()
  {
    return MD5Sum< ::determinant::determine >::value();
  }
  static const char* value(const ::determinant::determineResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::determinant::determineResponse> should match
// service_traits::DataType< ::determinant::determine >
template<>
struct DataType< ::determinant::determineResponse>
{
  static const char* value()
  {
    return DataType< ::determinant::determine >::value();
  }
  static const char* value(const ::determinant::determineResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DETERMINANT_MESSAGE_DETERMINE_H
